// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package nmpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SimpleMessage struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleMessage) Reset()         { *m = SimpleMessage{} }
func (m *SimpleMessage) String() string { return proto.CompactTextString(m) }
func (*SimpleMessage) ProtoMessage()    {}
func (*SimpleMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *SimpleMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleMessage.Unmarshal(m, b)
}
func (m *SimpleMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleMessage.Marshal(b, m, deterministic)
}
func (m *SimpleMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleMessage.Merge(m, src)
}
func (m *SimpleMessage) XXX_Size() int {
	return xxx_messageInfo_SimpleMessage.Size(m)
}
func (m *SimpleMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleMessage proto.InternalMessageInfo

func (m *SimpleMessage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type BinaryMessage struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BinaryMessage) Reset()         { *m = BinaryMessage{} }
func (m *BinaryMessage) String() string { return proto.CompactTextString(m) }
func (*BinaryMessage) ProtoMessage()    {}
func (*BinaryMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *BinaryMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryMessage.Unmarshal(m, b)
}
func (m *BinaryMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryMessage.Marshal(b, m, deterministic)
}
func (m *BinaryMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryMessage.Merge(m, src)
}
func (m *BinaryMessage) XXX_Size() int {
	return xxx_messageInfo_BinaryMessage.Size(m)
}
func (m *BinaryMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryMessage proto.InternalMessageInfo

func (m *BinaryMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*SimpleMessage)(nil), "nmpb.SimpleMessage")
	proto.RegisterType((*BinaryMessage)(nil), "nmpb.BinaryMessage")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 180 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0xcb, 0x2d, 0x48, 0x52, 0x52, 0xe5, 0xe2, 0x0d,
	0xce, 0xcc, 0x2d, 0xc8, 0x49, 0xf5, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x15, 0x12, 0xe1, 0x62,
	0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x70, 0x94, 0x94,
	0xb9, 0x78, 0x9d, 0x32, 0xf3, 0x12, 0x8b, 0x2a, 0x61, 0xca, 0x84, 0xb8, 0x58, 0x52, 0x12, 0x4b,
	0x12, 0xc1, 0xaa, 0x78, 0x82, 0xc0, 0x6c, 0xa3, 0x76, 0x46, 0x2e, 0x81, 0xe0, 0x82, 0xc4, 0xe4,
	0xd4, 0xdc, 0xd4, 0xe2, 0x8c, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x6b, 0x2e, 0x5e,
	0xa7, 0xa2, 0xfc, 0xc4, 0x94, 0xe4, 0xc4, 0xe2, 0x92, 0x80, 0xfc, 0xd4, 0x12, 0x21, 0x61, 0x3d,
	0x90, 0xc5, 0x7a, 0x28, 0xc6, 0x49, 0x41, 0x05, 0x51, 0x9c, 0xa2, 0xc4, 0x20, 0x64, 0xc6, 0xc5,
	0xe1, 0x9e, 0x5a, 0x12, 0x50, 0x94, 0x9f, 0x9f, 0x26, 0x84, 0x4d, 0x89, 0x14, 0x36, 0xc3, 0x94,
	0x18, 0x92, 0xd8, 0xc0, 0x5e, 0x34, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x0e, 0x33, 0x44,
	0xef, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SpacemeshServiceClient is the client API for SpacemeshService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpacemeshServiceClient interface {
	BroadcastPoet(ctx context.Context, in *BinaryMessage, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetProof(ctx context.Context, in *SimpleMessage, opts ...grpc.CallOption) (*BinaryMessage, error)
}

type spacemeshServiceClient struct {
	cc *grpc.ClientConn
}

func NewSpacemeshServiceClient(cc *grpc.ClientConn) SpacemeshServiceClient {
	return &spacemeshServiceClient{cc}
}

func (c *spacemeshServiceClient) BroadcastPoet(ctx context.Context, in *BinaryMessage, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/nmpb.SpacemeshService/BroadcastPoet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetProof(ctx context.Context, in *SimpleMessage, opts ...grpc.CallOption) (*BinaryMessage, error) {
	out := new(BinaryMessage)
	err := c.cc.Invoke(ctx, "/nmpb.SpacemeshService/GetProof", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpacemeshServiceServer is the server API for SpacemeshService service.
type SpacemeshServiceServer interface {
	BroadcastPoet(context.Context, *BinaryMessage) (*SimpleMessage, error)
	GetProof(context.Context, *SimpleMessage) (*BinaryMessage, error)
}

func RegisterSpacemeshServiceServer(s *grpc.Server, srv SpacemeshServiceServer) {
	s.RegisterService(&_SpacemeshService_serviceDesc, srv)
}

func _SpacemeshService_BroadcastPoet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BinaryMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).BroadcastPoet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nmpb.SpacemeshService/BroadcastPoet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).BroadcastPoet(ctx, req.(*BinaryMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimpleMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetProof(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nmpb.SpacemeshService/GetProof",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetProof(ctx, req.(*SimpleMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _SpacemeshService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nmpb.SpacemeshService",
	HandlerType: (*SpacemeshServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BroadcastPoet",
			Handler:    _SpacemeshService_BroadcastPoet_Handler,
		},
		{
			MethodName: "GetProof",
			Handler:    _SpacemeshService_GetProof_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
